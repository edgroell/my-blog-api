{
  "swagger": "2.0",
  "info": {
    "title": "My Blog API",
    "version": "1.0.0",
    "description": "A simple API for managing blog posts. Supports CRUD operations, searching, and sorting."
  },
  "host": "localhost:5002",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "Posts",
      "description": "Operations about posts"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "summary": "Retrieve all posts with optional sorting",
        "description": "Returns a list of all posts. Can be sorted by 'id', 'title', 'content', 'author', or 'date' in 'asc' or 'desc' order.",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "type": "string",
            "enum": [
              "id",
              "title",
              "content",
              "author",
              "date"
            ]
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Sorting direction",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of posts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          },
          "400": {
            "description": "Invalid sorting parameters",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new post",
        "description": "Adds a new post to the collection. Automatically assigns an ID and current date/time.",
        "tags": [
          "Posts"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "description": "Post object to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid input, e.g., missing title, content, or author",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "put": {
        "summary": "Update an existing post",
        "description": "Updates a post identified by its ID. Any provided fields (title, content, author) will be updated. The 'date' field is automatically set to the current time on update.",
        "tags": [
          "Posts"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the post to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "post",
            "in": "body",
            "description": "Updated post object (partial updates are allowed)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid input, e.g., empty title, content, or author if provided",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a post",
        "description": "Deletes a post identified by its ID.",
        "tags": [
          "Posts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the post to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post with id 1 has been deleted successfully."
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts/search": {
      "get": {
        "summary": "Search for posts",
        "description": "Searches posts by title, content, author (case-insensitive), and/or exact date (YYYY-MM-DD). Returns unique matching posts.",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Partial title to search for (case-insensitive)",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Partial content to search for (case-insensitive)",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Partial author name to search for (case-insensitive)",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Exact date to search for (YYYY-MM-DD)",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of matching posts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier for the post",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Title of the post"
        },
        "content": {
          "type": "string",
          "description": "Content of the post"
        },
        "author": {
          "type": "string",
          "description": "Author of the post"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Creation or last update date/time of the post (ISO 8601 format)",
          "readOnly": true
        }
      },
      "example": {
        "id": 1,
        "title": "First post",
        "content": "This is the first post.",
        "author": "Ed",
        "date": "2025-06-27T16:10:09.000000Z"
      }
    },
    "NewPost": {
      "type": "object",
      "required": [
        "title",
        "content",
        "author"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the new post"
        },
        "content": {
          "type": "string",
          "description": "Content of the new post"
        },
        "author": {
          "type": "string",
          "description": "Author of the new post"
        }
      },
      "example": {
        "title": "My Brand New Post",
        "content": "This is exciting new content!",
        "author": "Ed"
      }
    },
    "UpdatePost": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional new title for the post"
        },
        "content": {
          "type": "string",
          "description": "Optional new content for the post"
        },
        "author": {
          "type": "string",
          "description": "Optional new author for the post"
        }
      },
      "example": {
        "title": "Updated Title",
        "content": "Even newer content for the post.",
        "author": "Mon"
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "A single error message"
        },
        "error(s)": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of error messages for validation failures"
        }
      },
      "example": {
        "error": "Post with id 123 not found."
      }
    }
  }
}
